import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { 
  Select, 
  SelectContent, 
  SelectItem, 
  SelectTrigger,
  SelectValue 
} from "@/components/ui/select";
import { 
  AlertCircle, 
  ExternalLink, 
  Calendar, 
  Package,
} from 'lucide-react';
import { cn } from "@/lib/utils";
import type { Vulnerability } from '@/types/vscan';
import { severityColors, statusLabels } from './VulnerabilitiesTable';

interface VulnerabilityDetailsProps {
  vulnerability: Vulnerability | null;
  onClose: () => void;
  onStatusChange: (vulnId: number, status: string) => void;
}

export default function VulnerabilityDetails({
  vulnerability,
  onClose,
  onStatusChange
}: VulnerabilityDetailsProps) {
  if (!vulnerability) return null;

  const isGitHubVulnerability = vulnerability.cve.startsWith('GHSA-');

  const getVulnerabilityUrl = () => {
    if (isGitHubVulnerability) {
      return `https://github.com/advisories/${vulnerability.cve}`;
    }
    return `https://nvd.nist.gov/vuln/detail/${vulnerability.cve}`;
  };

  const formatDate = (date?: string) => {
    if (!date) return 'N/A';
    try {
      const d = new Date(date);
      return d.toLocaleString('en-US', {
        month: 'numeric',
        day: 'numeric',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        hour12: true
      });
    } catch {
      return 'Invalid date';
    }
  };

  const currentStatus = (vulnerability.status || 'pending') as keyof typeof statusLabels;

  return (
    <Dialog open={!!vulnerability} onOpenChange={onClose}>
      <DialogContent className="max-w-3xl">
        <DialogHeader>
          <div className="flex items-center justify-between">
            <DialogTitle className="flex items-center gap-2">
              {isGitHubVulnerability && (
                <svg viewBox="0 0 24 24" className="h-5 w-5" fill="currentColor">
                  <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"/>
                </svg>
              )}
              <span>{vulnerability.cve}</span>
            </DialogTitle>
            <div className="flex items-center gap-2">
              <Badge className={severityColors[vulnerability.severity]}>
                {vulnerability.severity}
              </Badge>
            </div>
          </div>
          <DialogDescription className="mt-2">
            Details for vulnerability in {vulnerability.packageName}
          </DialogDescription>
        </DialogHeader>

        <ScrollArea className="max-h-[600px]">
          <div className="space-y-6">            
            <div className="space-y-2">
              <div className="flex items-center gap-2">
                <AlertCircle className="h-4 w-4" />
                <h3 className="font-medium">Description</h3>
              </div>
              <div className="text-sm text-muted-foreground">
                {vulnerability.description || 'No description available'}
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <div className="flex items-center gap-2">
                  <Package className="h-4 w-4" />
                  <h3 className="font-medium">Package Information</h3>
                </div>
                <div className="space-y-2">
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Name:</span>
                    <span>{vulnerability.packageName}</span>
                  </div>
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Installed Version:</span>
                    <span>{vulnerability.installedVersion}</span>
                  </div>
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Fixed Version:</span>
                    <span>{vulnerability.fixedVersion || 'N/A'}</span>
                  </div>
                </div>
              </div>

              <div className="space-y-2">
                <div className="flex items-center gap-2">
                  <Calendar className="h-4 w-4" />
                  <h3 className="font-medium">Metadata</h3>
                </div>
                <div className="space-y-2">
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Published:</span>
                    <span>{formatDate(vulnerability.publishedDate)}</span>
                  </div>
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Discovered:</span>
                    <span>{formatDate(vulnerability.discovered)}</span>
                  </div>
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Last Seen:</span>
                    <span>{formatDate(vulnerability.lastSeen)}</span>
                  </div>
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Server:</span>
                    <span>{vulnerability.vmName}</span>
                  </div>
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Scanner:</span>
                    <span>{vulnerability.scannerType}</span>
                  </div>
                  <div className="grid grid-cols-2 text-sm">
                    <span className="text-muted-foreground">Status:</span>
                    <Badge className={cn(
                      currentStatus === 'pending' && "bg-gray-100 text-gray-800 border-gray-200",
                      currentStatus === 'in_review' && "bg-blue-100 text-blue-800 border-blue-200",
                      currentStatus === 'confirmed' && "bg-purple-100 text-purple-800 border-purple-200",
                      currentStatus === 'false_positive' && "bg-orange-100 text-orange-800 border-orange-200",
                      currentStatus === 'fixed' && "bg-green-100 text-green-800 border-green-200",
                      currentStatus === 'wont_fix' && "bg-red-100 text-red-800 border-red-200"
                    )}>
                      {statusLabels[currentStatus]}
                    </Badge>
                  </div>
                </div>
              </div>
            </div>
            
            {vulnerability.referenceUrls && (
              <div className="space-y-2">
                <div className="flex items-center gap-2">
                  <ExternalLink className="h-4 w-4" />
                  <h3 className="font-medium">References</h3>
                </div>
                <div className="space-y-2">
                  {vulnerability.referenceUrls.split(',').map((url, index) => (
                    <div key={index} className="flex items-center gap-2">
                      <ExternalLink className="h-4 w-4 text-blue-500" />
                      <a 
                        href={url.trim()} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="text-sm text-blue-500 hover:underline"
                      >
                        {url.trim()}
                      </a>
                    </div>
                  ))}
                </div>
              </div>
            )}
            
            <div className="border-t pt-4 mt-6">
              <div className="flex justify-between items-center">
                <div className="space-x-2">
                  <Button 
                    variant="outline"
                    onClick={() => window.open(getVulnerabilityUrl(), '_blank')}
                  >
                    View {isGitHubVulnerability ? 'GitHub Advisory' : 'in NVD'}
                    <ExternalLink className="ml-2 h-4 w-4" />
                  </Button>
                </div>

                <div className="space-x-2">
                  <Select
                    value={vulnerability.status || 'pending'}
                    onValueChange={(value) => {
                      if (vulnerability.id) {
                        onStatusChange(vulnerability.id, value);
                      }
                    }}
                  >
                    <SelectTrigger className="min-w-[180px]">
                      <SelectValue placeholder="Update status" />
                    </SelectTrigger>
                    <SelectContent>
                      {Object.entries(statusLabels).map(([value, label]) => (
                        <SelectItem key={value} value={value}>
                          {label}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
              </div>
            </div>
          </div>
        </ScrollArea>
      </DialogContent>
    </Dialog>
  );
}